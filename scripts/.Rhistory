velocity <- CC.TotalData$v[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light)]
x <- log10(velocity[1:length(velocity)-1])
y <- log10(velocity[2:length(velocity)])
vel.auto.lm <- lm(x ~ y)
summary(vel.auto.lm)
#par(mfrow = c(1, 1))
plot(hexbin(x,
y,
xbins = 100),
xlab='Log velocity (m/s)',
ylab='Log velocity (m/s) next time step',
legend = 0)
#plot(c(min(x),max(x)),
#     vel.auto.lm$coefficients[1]+vel.auto.lm$coefficients[2]*c(min(x),max(x)),
#     type='l')
#lines(log10(velocity),vel.auto.lm$coefficients[1]+vel.auto.lm$coefficients[2]*log10(velocity))
hist(velocity,100)
hist(vel.auto.lm$residuals,100)
qqnorm(vel.auto.lm$residuals,main="Normal Q-Q plot")
qqline(vel.auto.lm$residuals)
ks.test(vel.auto.lm$residuals,'pnorm')
velocity <- CC.TotalData$v[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light)]
x <- log10(velocity[1:length(velocity)-1])
y <- log10(velocity[2:length(velocity)])
vel.auto.lm <- lm(x ~ y)
summary(vel.auto.lm)
#par(mfrow = c(1, 1))
plot(hexbin(x,
y,
xbins = 100),
xlab='Log velocity (m/s)',
ylab='Log velocity (m/s) next time step',
legend = 0)
#plot(c(min(x),max(x)),
#     vel.auto.lm$coefficients[1]+vel.auto.lm$coefficients[2]*c(min(x),max(x)),
#     type='l')
#lines(log10(velocity),vel.auto.lm$coefficients[1]+vel.auto.lm$coefficients[2]*log10(velocity))
hist(log10(velocity),100)
hist(vel.auto.lm$residuals,100)
qqnorm(vel.auto.lm$residuals,main="Normal Q-Q plot")
qqline(vel.auto.lm$residuals)
ks.test(vel.auto.lm$residuals,'pnorm')
# Values of conditions to test
flow.rate <- .6  # 0 0.6 3 5.9 8.9
chlorophyll <- 13.5 # 0 4.3 4.6 5.5 6.1 7.6 13.5 19
guano <- 1 # Absent=1 Present=2
light <- 2 # Absent=1 Present=2
# Vectors of all possible conditions combinations
frs <- as.numeric(as.character(unique(CC.TotalData$Flow.rate)))
chls <- as.numeric(as.character(unique(CC.TotalData$Chlorophyll)))
guans <- c(1,2)
lights <- c(1,2)
conditions <- expand.grid(frs,chls,guans,lights)
# Values of conditions to test
flow.rate <- 0  # 0 0.6 3 5.9 8.9
chlorophyll <- 0 # 0 4.3 4.6 5.5 6.1 7.6 13.5 19
guano <- 1 # Absent=1 Present=2
light <- 2 # Absent=1 Present=2
# Vectors of all possible conditions combinations
frs <- as.numeric(as.character(unique(CC.TotalData$Flow.rate)))
chls <- as.numeric(as.character(unique(CC.TotalData$Chlorophyll)))
guans <- c(1,2)
lights <- c(1,2)
conditions <- expand.grid(frs,chls,guans,lights)
velocity <- CC.TotalData$v[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light)]
x <- log10(velocity[1:length(velocity)-1])
y <- log10(velocity[2:length(velocity)])
vel.auto.lm <- lm(x ~ y)
summary(vel.auto.lm)
plot(hexbin(x,
y,
xbins = 100),
xlab='Log velocity (m/s)',
ylab='Log velocity (m/s) next time step',
legend = 0)
hist(log10(velocity),100)
hist(vel.auto.lm$residuals,100)
qqnorm(vel.auto.lm$residuals,main="Normal Q-Q plot")
qqline(vel.auto.lm$residuals)
ks.test(vel.auto.lm$residuals,'pnorm')
for (i in 1:dim(conditions)[1])
{
velocity <- CC.TotalData$v[
(CC.TotalData$Flow.rate==conditions[i,1] &
CC.TotalData$Chlorophyll==conditions[i,2] &
as.numeric(CC.TotalData$Guano)==conditions[i,3] &
as.numeric(CC.TotalData$Light)==conditions[i,4])]
if (length(velocity) <= 1) {
conditions[i,5] <- NA } else {
c<-cor.test(log10(velocity[1:length(velocity)-1]),
log10(velocity[2:length(velocity)]))
conditions[i,5] <- c$estimate
v0 <- log10(velocity[1:length(velocity)-1])
v1 <- log10(velocity[2:length(velocity)])
df <- data.frame(v0,v1)
fit <- lm(v1 ~ v0 + 1, data = df)
conditions[i,6] <- fit$coefficients[1]
conditions[i,7] <- fit$coefficients[2]
}
}
velocity <- CC.TotalData$v[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light)]
x <- log10(velocity[1:length(velocity)-1])
y <- log10(velocity[2:length(velocity)])
vel.auto.lm <- lm(x ~ y + 1)
summary(vel.auto.lm)
plot(hexbin(x,
y,
xbins = 100),
xlab='Log velocity (m/s)',
ylab='Log velocity (m/s) next time step',
legend = 0)
hist(log10(velocity),100)
hist(vel.auto.lm$residuals,100)
qqnorm(vel.auto.lm$residuals,main="Normal Q-Q plot")
qqline(vel.auto.lm$residuals)
ks.test(vel.auto.lm$residuals,'pnorm')
install.packages('diptest')
library(diptest)
d
d <- dip.test(velocity)
d
?dip.test
d$statistic
d$p.value
for (i in 1:dim(conditions)[1])
{
velocity <- CC.TotalData$v[
(CC.TotalData$Flow.rate==conditions[i,1] &
CC.TotalData$Chlorophyll==conditions[i,2] &
as.numeric(CC.TotalData$Guano)==conditions[i,3] &
as.numeric(CC.TotalData$Light)==conditions[i,4])]
if (length(velocity) <= 1) {
conditions[i,5] <- NA } else {
c<-cor.test(log10(velocity[1:length(velocity)-1]),
log10(velocity[2:length(velocity)]))
conditions[i,5] <- c$estimate
v0 <- log10(velocity[1:length(velocity)-1])
v1 <- log10(velocity[2:length(velocity)])
df <- data.frame(v0,v1)
fit <- lm(v1 ~ v0 + 1, data = df)
conditions[i,6] <- fit$coefficients[1]
conditions[i,7] <- fit$coefficients[2]
d <- dip.test(velocity)
conditions[i,8] <- d$p.value
}
}
hist(conditions[,8])
hist(conditions[,8],100)
length(which(conditions[,8]<0.05))
length(which(conditions[,8]>=0.05))
I <- which(conditions[,8]>0.05)
I
conditions[I,]
conditions[I,1:4]
I <- which(conditions[,8]<0.05)
conditions[I,1:4]
# Values of conditions to test
flow.rate <- 0  # 0 0.6 3 5.9 8.9
chlorophyll <- 0 # 0 4.3 4.6 5.5 6.1 7.6 13.5 19
guano <- 1 # Absent=1 Present=2
light <- 1 # Absent=1 Present=2
# Vectors of all possible conditions combinations
frs <- as.numeric(as.character(unique(CC.TotalData$Flow.rate)))
chls <- as.numeric(as.character(unique(CC.TotalData$Chlorophyll)))
guans <- c(1,2)
lights <- c(1,2)
conditions <- expand.grid(frs,chls,guans,lights)
velocity <- CC.TotalData$v[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light)]
x <- log10(velocity[1:length(velocity)-1])
y <- log10(velocity[2:length(velocity)])
vel.auto.lm <- lm(x ~ y + 1)
summary(vel.auto.lm)
plot(hexbin(x,
y,
xbins = 100),
xlab='Log velocity (m/s)',
ylab='Log velocity (m/s) next time step',
legend = 0)
hist(log10(velocity),100)
hist(vel.auto.lm$residuals,100)
qqnorm(vel.auto.lm$residuals,main="Normal Q-Q plot")
qqline(vel.auto.lm$residuals)
ks.test(vel.auto.lm$residuals,'pnorm')
I <- which(conditions[,8]<0.05)
for (i in 1:dim(conditions)[1])
{
velocity <- CC.TotalData$v[
(CC.TotalData$Flow.rate==conditions[i,1] &
CC.TotalData$Chlorophyll==conditions[i,2] &
as.numeric(CC.TotalData$Guano)==conditions[i,3] &
as.numeric(CC.TotalData$Light)==conditions[i,4])]
if (length(velocity) <= 1) {
conditions[i,5] <- NA } else {
c<-cor.test(log10(velocity[1:length(velocity)-1]),
log10(velocity[2:length(velocity)]))
conditions[i,5] <- c$estimate
v0 <- log10(velocity[1:length(velocity)-1])
v1 <- log10(velocity[2:length(velocity)])
df <- data.frame(v0,v1)
fit <- lm(v1 ~ v0 + 1, data = df)
conditions[i,6] <- fit$coefficients[1]
conditions[i,7] <- fit$coefficients[2]
d <- dip.test(velocity)
conditions[i,8] <- d$p.value
}
}
I <- which(conditions[,8]<0.05)
conditions[I,1:4]
I <- which(conditions[,8]>0.05)
conditions[I,1:4]
plot(conditions[,1],conditions[,8])
plot(conditions[,2],conditions[,8])
plot(conditions[,3],conditions[,8])
plot(conditions[,4],conditions[,8])
install.packages('goft')
library('goft')
cauchy_test(vel.auto.lm$residuals)
cauchy_test(rnorm(20))
cauchy_test(c(1,1,1,1,1,1,1,1,1,1))
cauchy_test(c(1,1,1,1,1,1,1,1,1.1,1))
cauchy_test(c(1,1.2,1.3,1,7,1,1,1,1.1,1))
rnorm(20)
rnorm(10)
cauchy_test(rnorm(10))
install.packages("distributions3")
library(distributions3)
cx <- Cauchy(0,1)
length(cx)
cx
random(cx,10)
cauchy_test(random(cx,20))
View(conditions)
View(conditions)
fit
fit$residuals
mean(fit$residuals)
sd(fit$residuals)
View(conditions)
View(conditions)
View(conditions)
View(conditions)
?dip.test
hist(velocity)
hist(log10(velocity))
length(velocity)
flow.rate <- 0  # 0 0.6 3 5.9 8.9
chlorophyll <- 0 # 0 4.3 4.6 5.5 6.1 7.6 13.5 19
guano <- 1 # Absent=1 Present=2
light <- 1 # Absent=1 Present=2
velocity <- CC.TotalData$v[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light)]
hist(log10(velocity))
hist(log10(velocity),100)
d <- dip.test(velocity)
d$p.value
hist(log10(velocity),
main=d$p.value))
hist(log10(velocity),
main=d$p.value)
for (i in 1:dim(conditions)[1])
{
velocity <- CC.TotalData$v[
(CC.TotalData$Flow.rate==conditions[i,1] &
CC.TotalData$Chlorophyll==conditions[i,2] &
as.numeric(CC.TotalData$Guano)==conditions[i,3] &
as.numeric(CC.TotalData$Light)==conditions[i,4])]
if (length(velocity) <= 1) {
conditions[i,5] <- NA } else {
c<-cor.test(log10(velocity[1:length(velocity)-1]),
log10(velocity[2:length(velocity)]))
conditions[i,5] <- c$estimate
v0 <- log10(velocity[1:length(velocity)-1])
v1 <- log10(velocity[2:length(velocity)])
df <- data.frame(v0,v1)
fit <- lm(v1 ~ v0 + 1, data = df)
conditions[i,6] <- fit$coefficients[1]
conditions[i,7] <- fit$coefficients[2]
d <- dip.test(velocity)
conditions[i,8] <- d$p.value
hist(log10(velocity),
main=d$p.value)
}
}
hist(log10(velocity),100,
main=d$p.value)
hist(conditions[,8])
hist(conditions[,8],20)
c
plot(conditions[,2],conditions[,5])
plot(conditions[,1],conditions[,5])
remotes::install_github("BigelowLab/haedat")
remotes::install_github("BigelowLab/haedat")
library(haedat)
obis <- read_haedat(source = "obis")
fetch_haedat(where = "obis")
obis <- read_haedat(source = "obis")
fetch_haedat(where = "obis")
fetch_haedat(where = "iode")
list_haedat(source = "obis")
obis <- read_haedat(source = "obis")
haedat::haedat_root()
fetch_haedat(where = "obis")
obis <- read_haedat(source = "obis")
fetch_haedat(where = "iode")
iode <- read_haedat(source = "iode")
hist(dplyr::filter(iode, !is.na(eventYear) & eventYear > 1990) |>
dplyr::pull(eventYear),
main = "IODE HAEDAT events since 1990",
xlab = 'Year',
breaks = seq(from = 1990, to = max(iode$eventYear)))
hist(dplyr::filter(iode, !is.na(causativeSpeciesName)) |>
dplyr::pull(causativeSpeciesName),
main = "",
xlab = '')
hist(iode$causativeSpeciesName0)
hist(dplyr::filter(iode, !is.na(causativeSpeciesName0)) |>
dplyr::pull(causativeSpeciesName0),
main = "",
xlab = '')
bar(iode$causativeSpeciesName0)
barplot(iode$causativeSpeciesName0)
library(ggplot2)
ggplot(data.frame(iode$causativeSpeciesName0)) + geom_bar()
barplot(prop.table(table(iode$causativeSpeciesName0)))
plot(as.factor(iode$causativeSpeciesName0))
unique(iode$causativeSpeciesName0)
q()
setwd('~/Work/Manuscripts/2023gom/gom-series/')
data <- read.csv('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table')
data <- read.csv('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep=' ')
data <- read.fwf('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table')
data <- read.fwf('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',2)
data <- read.fwf('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',5)
data <- read.table('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table')
data <- read.table('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep=' ')
data <- read.table('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep='',header=T)
data <- read.table('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep='',header=T,nrows = 73)
data[1,1]
data <- read.table('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep='',header=F,nrows = 73)
data <- read.table('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep='',header=T,nrows = 73)
data <- read.table('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep='',header=T,nrows = 73,na.strings ="")
x <- readLines('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table')
x <- read.csv2('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table')
x <- read.csv2('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep=' ')
View(x)
View(x)
x <- read.csv2('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep=' ',header=T)
x <- read.csv2('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep='   ',header=T)
x <- read.csv2('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep='  ',header=T)
x <- read.csv2('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep=' ',header=T)
x <- read.csv2('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep='',header=T)
setwd('scripts/')
x <- read.csv2('https://psl.noaa.gov/data/correlation/amon.us.data')
View(x)
View(x)
x <- read.csv2('https://psl.noaa.gov/data/correlation/amon.us.data',sep='')
x <- read.csv2('https://psl.noaa.gov/data/correlation/amon.us.data',sep='',header=T)
x <- read.csv2('https://psl.noaa.gov/data/correlation/amon.us.data',sep='',header=F,skip=1)
View(x)
View(x)
x <- read.csv2('https://psl.noaa.gov/data/correlation/amon.us.data',sep='',header=F,skip=1,stringsAsFactors = F)
x[1,1]
class(x[1,1])
x <- read.csv2('https://psl.noaa.gov/data/correlation/amon.us.data',sep='',header=F,skip=1)
class(x[1,1])
x <- as.numeric(x)
x <- read.table('https://psl.noaa.gov/data/correlation/amon.us.data',sep='',header=F,skip=1)
nao <- read.csv2('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep='',header=T)
class(nao[1,1])
nao <- read.csv2('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep='',header=T,stringsAsFactors = F)
class(nao[1,1])
class(nao[1,2])
class(nao[2,2])
nao[1,1]
nao <- as.numeric(nao)
nao[,1] <- as.numeric(nao[,1])
nao[,1] <- as.numeric(nao[,])
nao[,1:12] <- as.numeric(nao[,1:12])
View(nao)
View(nao)
nao[,12] <- as.numeric(nao[,12])
nao[,11] <- as.numeric(nao[,11])
nao[,10] <- as.numeric(nao[,10])
nao <- read.csv2('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep='',header=T)
for (i in 1:12)
{nao[,i]<-as.numeric(nao[,i])}
class(nao)
class(nao[1,1])
amo <- read.table('https://psl.noaa.gov/data/correlation/amon.us.data',sep='',header=F,skip=1)
x <- read.csv2('https://psl.noaa.gov/data/correlation/amon.us.data',sep='',header=F,skip=1)
amo <- read.csv2('https://psl.noaa.gov/data/correlation/amon.us.data',sep='',header=F,skip=1)
x <- read.csv2('https://psl.noaa.gov/data/correlation/amon.us.data',sep='',header=F,skip=1)
for (i in 1:13)
{amo[,i]<-as.numeric(amo[,i])}
View(amo)
View(amo)
ClimateIndices <- data.frame(Year=1950:2023)
row.names(nao)
as.numeric(row.names(nao))
nao$years <- as.numeric(row.names(nao))
View(nao)
View(nao)
ClimateIndices <- data.frame(year=1950:2023)
nao <- read.csv2('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep='',header=T)
nao$year <- as.numeric(row.names(nao))
for (i in 1:12)
{nao[,i]<-as.numeric(nao[,i])}
x <- merge(ClimateIndices, nao, by=year)
x <- merge(ClimateIndices, nao, by='year')
View(x)
View(x)
colnames(x)
colnames(x)[2]
colnames(x)[2] <- paste(colnames(x)[2],'NAO',sep='')
colnames(x)[2]
View(amo)
View(amo)
amo[,1] <- round(amo[,1])
colnames(amo)[1]
colnames(amo)[1]<-'year'
amo <- read.csv2('https://psl.noaa.gov/data/correlation/amon.us.data',sep='',header=F,skip=1)
for (i in 1:13)
{amo[,i]<-as.numeric(amo[,i])}
amo[,1] <- round(amo[,1])
colnames(amo)[1]<-'year'
ClimateIndices <- merge(ClimateIndices, amo, by='year')
View(ClimateIndices)
View(ClimateIndices)
ClimateIndices <- data.frame(year=1950:2023)
nao <- read.csv2('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep='',header=T)
nao$year <- as.numeric(row.names(nao))
for (i in 1:12)
{nao[,i]<-as.numeric(nao[,i])}
ClimateIndices <- merge(ClimateIndices, nao, by='year')
for (i=2:13)
View(ClimateIndices)
View(ClimateIndices)
for (i=2:13)
for (i in 2:13)
{colnames(ClimateIndices)[i] <- paste(colnames(ClimateIndices)[i],'NAO',sep='')}
View(ClimateIndices)
View(ClimateIndices)
for (i in 2:13)
{colnames(ClimateIndices)[i] <- paste(colnames(ClimateIndices)[i],'NAO',sep='')}
amo <- read.csv2('https://psl.noaa.gov/data/correlation/amon.us.data',sep='',header=F,skip=1)
for (i in 1:13)
{amo[,i]<-as.numeric(amo[,i])}
amo[,1] <- round(amo[,1])
colnames(amo)[1]<-'year'
ClimateIndices <- merge(ClimateIndices, amo, by='year')
ClimateIndices <- data.frame(year=1950:2023)
nao <- read.csv2('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep='',header=T)
nao$year <- as.numeric(row.names(nao))
for (i in 1:12)
{nao[,i]<-as.numeric(nao[,i])}
ClimateIndices <- merge(ClimateIndices, nao, by='year')
for (i in 2:13)
{colnames(ClimateIndices)[i] <- paste(colnames(ClimateIndices)[i],'NAO',sep='')}
amo <- read.csv2('https://psl.noaa.gov/data/correlation/amon.us.data',sep='',header=F,skip=1)
for (i in 1:13)
{amo[,i]<-as.numeric(amo[,i])}
amo[,1] <- round(amo[,1])
colnames(amo)[1]<-'year'
ClimateIndices <- merge(ClimateIndices, amo, by='year')
View(amo)
View(amo)
for (i in 2:13)
{colnames(amo)[i] <- paste(colnames(nao)[i],'AMO',sep='')}
View(amo)
View(amo)
View(nao)
View(nao)
ClimateIndices <- data.frame(year=1950:2023)
nao <- read.csv2('https://www.cpc.ncep.noaa.gov/products/precip/CWlink/pna/norm.nao.monthly.b5001.current.ascii.table',sep='',header=T)
nao$year <- as.numeric(row.names(nao))
for (i in 1:12)
{nao[,i]<-as.numeric(nao[,i])}
ClimateIndices <- merge(ClimateIndices, nao, by='year')
for (i in 2:13)
{colnames(ClimateIndices)[i] <- paste(colnames(ClimateIndices)[i],'NAO',sep='')}
amo <- read.csv2('https://psl.noaa.gov/data/correlation/amon.us.data',sep='',header=F,skip=1)
for (i in 1:13)
{amo[,i]<-as.numeric(amo[,i])}
amo[,1] <- round(amo[,1])
colnames(amo)[1]<-'year'
for (i in 2:13)
{colnames(amo)[i] <- paste(colnames(nao)[i-1],'AMO',sep='')}
ClimateIndices <- merge(ClimateIndices, amo, by='year')
write.csv(ClimateIndices, '../data/ClimateIndices.csv', row.names=T)
